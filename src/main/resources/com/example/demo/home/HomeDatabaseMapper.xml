<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.home.HomeDatabaseMapper">
	<select id="getEarningsMonth" resultType="java.lang.Integer">
		SELECT SUM(money) FROM earnings
		WHERE	company_id = #{companyId}
		AND 	DATE_FORMAT(earnings_date,"%m") = DATE_FORMAT(CURDATE(),"%m")
		AND		DATE_FORMAT(earnings_date,"%y") = DATE_FORMAT(CURDATE(),"%y")
	</select>
	<select id="getEexpensesMonth" resultType="java.lang.Integer">
		SELECT SUM(money) FROM expenses
		WHERE	company_id = #{companyId}
		AND 	DATE_FORMAT(expenses_date,"%m") = DATE_FORMAT(CURDATE(),"%m")
		AND		DATE_FORMAT(expenses_date,"%y") = DATE_FORMAT(CURDATE(),"%y")
	</select>
	<select id="getEarningsYear" resultType="java.lang.Integer">
		SELECT SUM(money) FROM earnings
		WHERE	company_id = #{companyId}
		AND 	DATE_FORMAT(earnings_date,"%y") = DATE_FORMAT(CURDATE(),"%y")
	</select>
	<select id="getExpensesYear" resultType="java.lang.Integer">
		SELECT SUM(money) FROM expenses
		WHERE	company_id = #{companyId}
		AND 	DATE_FORMAT(expenses_date,"%y") = DATE_FORMAT(CURDATE(),"%y")
	</select>
	<select id="getNetIncomeYear" resultType="java.lang.Integer">
		SELECT
			SUM(income_money) - (CASE WHEN TRUNCATE(SUM(income_money),-3) > 18000000 THEN (0.4 * TRUNCATE(SUM(income_money),-3) - 2796000) 
				 WHEN TRUNCATE(SUM(income_money),-3) > 9000000 THEN (0.33 * TRUNCATE(SUM(income_money),-3) - 1536000) 
				 WHEN TRUNCATE(SUM(income_money),-3) > 6950000 THEN (0.23 * TRUNCATE(SUM(income_money),-3) - 636000) 
				 WHEN TRUNCATE(SUM(income_money),-3) > 3300000 THEN (0.2 * TRUNCATE(SUM(income_money),-3) - 427500) 
				 WHEN TRUNCATE(SUM(income_money),-3) > 1950000 THEN (0.1 * TRUNCATE(SUM(income_money),-3) - 97500) 
				 WHEN SUM(income_money) > 0 THEN 0.05 * TRUNCATE(SUM(income_money),-3) 
				 ELSE 0
			END )								AS "money"
		FROM(
			SELECT
				earnings.earnings_date	AS "income_date",
				earnings.money			AS "income_money"
			FROM earnings
				INNER JOIN suppliers ON earnings.suppliers_id = suppliers.id AND earnings.company_id = suppliers.company_id
			WHERE suppliers.company_id = #{companyId}
			UNION ALL 
			(SELECT
				expenses.expenses_date AS "income_date",
				(0 - expenses.money) AS "income_date"
			FROM expenses
				INNER JOIN expenses_item ON expenses.expenses_item_id = expenses_item.id AND expenses.company_id = expenses_item.company_id
			WHERE expenses.company_id = #{companyId})
		) income
		WHERE DATE_FORMAT(income_date,"%Y") = DATE_FORMAT(CURDATE(),"%Y");
	</select>
</mapper>